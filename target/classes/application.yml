# application.yml
server:
  port: 8080

spring:
  application:
    name: ai-room-decorator
  
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
      enabled: true
  
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: password
  
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: false
  
  h2:
    console:
      enabled: true
      path: /h2-console

# API Keys (set these as environment variables in production)
openai:
  api:
    key: ${OPENAI_API_KEY:your-openai-api-key-here}

stability:
  api:
    key: ${STABILITY_API_KEY:your-stability-api-key-here}

# Logging configuration
logging:
  level:
    com.roomdecorator: INFO
    org.springframework.web: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# CORS configuration
cors:
  allowed-origins: 
    - http://localhost:3000
    - http://localhost:3001
    - https://your-frontend-domain.com
  allowed-methods:
    - GET
    - POST
    - PUT
    - DELETE
    - OPTIONS
  allowed-headers: "*"
  allow-credentials: true

---
# Production profile
spring:
  profiles: production
  
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/roomdecorator}
    username: ${DB_USERNAME:roomdecorator}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
  
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate

logging:
  level:
    root: WARN
    com.roomdecorator: INFO